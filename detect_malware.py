import os
import yara

class Scanner:
    def __init__(self, rules_directory):
        self.rules_directory = rules_directory
        self.rules = self.compile_yara_rules()
        self.total = {}
    
    def compile_yara_rules(self):
        rules = []
        for filename in os.listdir(self.rules_directory):
            if filename.endswith('.yar') or filename.endswith('.yara'):
                rules.append(os.path.join(self.rules_directory, filename))
        return yara.compile(filepaths={rule: rule for rule in rules})

    def scan_file(self, file_path, current_file_label, add_to_treeview):
        try:
            matches = self.rules.match(file_path)
            if matches:
                current_file_label.config(text=f"[!] Phát hiện tệp độc hại: {file_path}")
                for match in matches:
                    rule_name = match.rule
                    print(f"    Quy tắc: {match.rule}")
                add_to_treeview(file_path, f"{match.rule}")  # Thêm tệp vào Treeview
                if rule_name in self.total:
                        self.total[rule_name] += 1
                else:
                    self.total[rule_name] = 1
        except Exception as e:
            current_file_label.config(text=f"[x] Lỗi khi quét {file_path}: {e}")

    def scan_directory(self, directory, current_file_label, add_to_treeview, add_total_view, total_label_change):
        temp = 0
        for root, dirs, files in os.walk(directory):
            for file in files:
                temp += 1
                file_path = os.path.join(root, file)
                current_file_label.config(text=f"File hiện tại: {file_path}")
                print(f"[*] Đang quét: {file_path}")
                current_file_label.update_idletasks()  # Cập nhật giao diện ngay lập tức
                current_file_label.master.update()  # Tải lại giao diện
                self.scan_file(file_path, current_file_label, add_to_treeview)
        self.total_malware(add_total_view, total_label_change, temp)
                
    def total_malware(self, add_total_view, total_label_change, num_files):
        total_all = 0
        for rule_name, count in self.total.items():
            total_all += int(count)
            add_total_view(rule_name, count)
        total_label_change(total_all, num_files)
        return
